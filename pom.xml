<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>storeManager</groupId>
  <artifactId>storeManager</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>storeManager</name>
  <url>http://maven.apache.org</url>


  	<properties>
		<jdk.version>1.7</jdk.version>
		<spring.version>4.1.1.RELEASE</spring.version>
		<jstl.version>1.2</jstl.version>
		<junit.version>4.11</junit.version>
		<logback.version>1.0.13</logback.version>
		<jcl-over-slf4j.version>1.7.5</jcl-over-slf4j.version>
		 <spring.profiles>dev</spring.profiles>
		 
	</properties>

	<dependencies>
	<!-- hibernate   -->
		 <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>4.0.1.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>4.2.0.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.common</groupId>
            <artifactId>hibernate-commons-annotations</artifactId>
            <version>4.0.1.Final</version>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
            <version>1.0.1.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>4.0.1.Final</version>
        </dependency>

	 	<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.3</version>
		</dependency>

		<!-- Unit Test -->
		 <dependency>
	      <groupId>junit</groupId>
	      <artifactId>junit</artifactId>
	      <version>4.12</version>
	      <scope>test</scope>
	    </dependency>
		<!-- json converter -->
		<dependency>
		    <groupId>com.fasterxml.jackson.jaxrs</groupId>
		    <artifactId>jackson-jaxrs-json-provider</artifactId>
		    <version>2.5.3</version>
		</dependency>
		<!-- Spring Core -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
			<!-- <exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions> -->
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${jcl-over-slf4j.version}</version>
		</dependency>

		<!-- <dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency> -->
		<dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-starter-test</artifactId>
		  <version>1.2.3.RELEASE</version>
		  <scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-orm</artifactId>
		    <version>3.1.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- jstl -->
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>
		 <dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <version>3.0.1</version>
		    <scope>provided</scope>
		</dependency>
		 <dependency>
		    <groupId>javax.servlet.jsp</groupId>
		    <artifactId>jsp-api</artifactId>
		    <version>2.1</version>
		    <scope>provided</scope>
		</dependency>

	<!-- 	jdbc database -->
	 <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.4</version>
            <exclusions>
              <!--   <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion> -->
                <exclusion>
                    <groupId>xml-apis</groupId>
                    <artifactId>xml-apis</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-jdbc</artifactId>
		    <version>3.0.3.RELEASE</version>
		</dependency>
		<dependency>
	        <groupId>mysql</groupId>
	        <artifactId>mysql-connector-java</artifactId>
	        <version>5.1.15</version>
   		 </dependency>
   		 <dependency>
		    <groupId>org.postgresql</groupId>
		    <artifactId>postgresql</artifactId>
		    <version>9.3-1100-jdbc41</version>
		</dependency>
   		 <dependency>
		    <groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>1.3.2</version>
		</dependency>
		<dependency>
		   <groupId>commons-fileupload</groupId>
		   <artifactId>commons-fileupload</artifactId>
		   <version>1.2.1</version> <!-- makesure correct version here -->
		</dependency>
		<dependency>
		    <groupId>com.google.appengine</groupId>
		    <artifactId>appengine-api-1.0-sdk</artifactId>
		    <version>1.9.19</version>
		</dependency>
	</dependencies>

	<build>
	 <resources>
        <resource>
            <filtering>true</filtering>
            <directory>src/test/resources</directory>
            <includes>
                <include>**/*.properties</include>
            </includes>
            <excludes>
                <exclude>**/*local.properties</exclude>
            </excludes>
        </resource>
        <resource>
            <directory>src/main/resources</directory>
            <includes>
                <include>**/*.properties</include>
                <include>**/*.xml</include>
            </includes>
        </resource>
    </resources>
    
		<finalName>storeManager</finalName>
 <plugins>

		    <!-- Eclipse project -->
		  <plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-eclipse-plugin</artifactId>
			<version>2.9</version>
			<configuration>
			
			        <!-- Always download and attach dependencies source code -->
				<downloadSources>true</downloadSources>
				<downloadJavadocs>false</downloadJavadocs>
				<!-- Avoid type mvn eclipse:eclipse -Dwtpversion=2.0 -->
				<wtpversion>2.0</wtpversion>
			</configuration>
		  </plugin>

		  <!-- Set JDK Compiler Level -->


		  <plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>3.1</version>
			<configuration>
				<source>${jdk.version}</source>
				<target>${jdk.version}</target>
			</configuration>
		  </plugin>

		  <!-- For Maven Tomcat Plugin -->
		 <!--  <plugin>
		        <artifactId>maven-war-plugin</artifactId>
		        <version>2.6</version>
		        <configuration>
		          <packagingExcludes>WEB-INF/lib/*.jar</packagingExcludes>
		        </configuration>
	      </plugin> -->
		 <plugin>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-maven-plugin</artifactId>
			<version>9.1.3.v20140225</version>
		  </plugin>

		  <plugin>
			<groupId>org.apache.tomcat.maven</groupId>
			<artifactId>tomcat7-maven-plugin</artifactId>
			<version>2.2</version>
			<configuration>		
			<path>/</path>			
				<update>true</update>
				<url>http://localhost:8080</url>						   
			</configuration>
		  </plugin>

  		<!-- <plugin>
			<groupId>org.apache.tomcat.maven</groupId>
			<artifactId>tomcat7-maven-plugin</artifactId>
			<version>7</version>
		  </plugin> -->

	      	 <!-- <plugin>
	            <groupId>com.google.appengine</groupId>
	            <artifactId>appengine-maven-plugin</artifactId>
	            <version>1.9.21</version>
	             <configuration>
		                <enableJarClasses>false</enableJarClasses>
		            </configuration>
	        </plugin> -->
	        <!--  <plugin>
	            <groupId>com.google.appengine</groupId>
	            <artifactId>appengine-maven-plugin</artifactId>
	            <version>1.9.21</version>
	            <configuration>
	              <jvmFlags>
	                <jvmFlag>-Xdebug</jvmFlag>
	                <jvmFlag>-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n</jvmFlag>
	              </jvmFlags>
	            </configuration>
	          </plugin> -->
	        <!--  <plugin>
			    <groupId>com.google.appengine</groupId>
			    <artifactId>appengine-maven-plugin</artifactId>
			    <version>1.9.21</version>
			    <configuration>
			        <jvmFlags>
			            <jvmFlag>-Xdebug</jvmFlag>
			            <jvmFlag>-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=y
			            </jvmFlag>
			        </jvmFlags>
			    </configuration>
			</plugin> -->
	        <!-- for grunt  -->
		<!-- <plugin>
			   <groupId>com.github.eirslett</groupId>
			   <artifactId>frontend-maven-plugin</artifactId>
			   <version>0.0.16</version>
		</plugin> -->
	<!-- 	<plugin>
	      <groupId>pl.allegro</groupId>
	      <artifactId>grunt-maven-plugin</artifactId>
	      <version>1.4.1</version>
	      <executions>
	        <execution>
	          <goals>
	            <goal>npm</goal>
	            <goal>grunt</goal>
	          </goals>
	        </execution>
	      </executions>
	    </plugin> -->
	       <!--   <plugin>
				  <groupId>org.codehaus.mojo</groupId>
				  <artifactId>exec-maven-plugin</artifactId>
				  <version>1.2.1</version>
				  <executions>
				    <execution>
				      <phase>prepare-package</phase>
				      <goals>
				        <goal>exec</goal>
				      </goals>
				    </execution>
				  </executions>
				  <configuration>
				    <executable>grunt</executable>
				  </configuration>
				</plugin> -->
		<!-- 	<plugin>
			   <groupId>pl.allegro</groupId>
			   <artifactId>grunt-maven-plugin</artifactId>
			   <version>1.5.0</version>
			   <configuration>
			       relative to src/main/webapp/, default: static
			       <jsSourceDirectory>src/main/webapp/app</jsSourceDirectory>

			       example options usage to get verbose output in logs
			       <gruntOptions>
			           <gruntOption>verbose</gruntOption>
			       </gruntOptions>

			       example npm install env variable
			       <npmEnvironmentVar>
			           <PHANTOMJS_CDNURL>http://cnpmjs.org/downloads</PHANTOMJS_CDNURL>
			       </npmEnvironmentVar>

			       example options usage to filter variables in given resource
			       <filteredResources>
			           <filteredResource>maven-properties.json</filteredResource>
			       </filteredResources>

			   </configuration>
			   <executions>
			       <execution>
			           <goals>
			               <goal>create-resources</goal>
			               <goal>npm</goal>
			               or npm-offline if npm failure is not an option
			                <goal>grunt</goal>
			            </goals>
			        </execution>
			    </executions>
			</plugin> -->
		<plugin>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-surefire-plugin</artifactId>
		    <version>2.12.3</version>
		    <dependencies>
		      <dependency>
		        <groupId>org.apache.maven.surefire</groupId>
		        <artifactId>surefire-junit47</artifactId>
		        <version>2.12.3</version>
		      </dependency>
		    </dependencies>
		  </plugin>
		</plugins>

	</build>
	<distributionManagement>

		   	 <repository>
			      <id>codehausSnapshots</id>
			      <name>Codehaus Snapshots</name>
			      <url>http://snapshots.maven.codehaus.org/maven2</url>
			      <layout>default</layout>
		    </repository>

	 </distributionManagement>
</project>
